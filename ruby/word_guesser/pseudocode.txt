Define the game code:
  Create a Game class, and initialize it with:
  is_over to guesses available is >= 0
  A secret word set by Player 1
  Player 2's individual guess
  An empty array to populate with Player 2's guesses

  define method to check the Player 2 guess
  define method to display the length of the secret word and the progress of the guessing
  define method to track the number of guesses available (Length of the secret word + 3)

Define the UI:
  Print game introduction
  Prompt Player one to enter their secret word, and use it to initialize a new game
  Using the display method, print an array that is the length of the secret word with
  ...ordered numbers in the letter's place, separated by spaces
   ^Test without dashes first

  In a loop While not is_over
    Prompt Player 2 to enter a number and a guess
    Store the guess
    If the the unique sorted Guesses Array equals the unique sorted secret_word
      is_over is true, and Player 2 wins.
    If the guess matches letters of the secret word
      Update the display array at the indexs where that letter matches
      decrement the number of guesses available
      push the guess to the Guesses Array unless Guesses Array already includes the guess
    If the guess does not match letters of the secret word
      decrement the number of guesses
      If number of guesses == 0
        Player 2 loses. Break out of the loop
  end the loop




Do I need this?
    if the Guesses Array already includes the guess
      do not decrement the number of guesses available
